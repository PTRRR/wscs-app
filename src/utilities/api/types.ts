/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CartItems".
 */
export type CartItems =
	| {
			product?: (number | null) | Product;
			variation?: (number | null) | Variation;
			quantity?: number | null;
			id?: string | null;
	  }[]
	| null;

export interface Config {
	collections: {
		articles: Article;
		products: Product;
		orders: Order;
		media: Media;
		categories: Category;
		users: User;
		variations: Variation;
		attributes: Attribute;
		tags: Tag;
		'product-types': ProductType;
		redirects: Redirect;
		'payload-preferences': PayloadPreference;
		'payload-migrations': PayloadMigration;
	};
	globals: {
		settings: Settings;
		header: Header;
		footer: Footer;
	};
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "articles".
 */
export interface Article {
	id: number;
	title: string;
	publishedOn?: string | null;
	hero: {
		type: 'none' | 'highImpact' | 'mediumImpact' | 'lowImpact';
		richText: {
			[k: string]: unknown;
		}[];
		links?:
			| {
					link: {
						type?: ('reference' | 'custom') | null;
						newTab?: boolean | null;
						reference?: {
							relationTo: 'articles';
							value: number | Article;
						} | null;
						url?: string | null;
						label: string;
						appearance?: ('default' | 'primary' | 'secondary') | null;
					};
					id?: string | null;
			  }[]
			| null;
		media?: number | Media | null;
	};
	layout: (
		| {
				invertBackground?: boolean | null;
				richText: {
					[k: string]: unknown;
				}[];
				links?:
					| {
							link: {
								type?: ('reference' | 'custom') | null;
								newTab?: boolean | null;
								reference?: {
									relationTo: 'articles';
									value: number | Article;
								} | null;
								url?: string | null;
								label: string;
								appearance?: ('primary' | 'secondary') | null;
							};
							id?: string | null;
					  }[]
					| null;
				id?: string | null;
				blockName?: string | null;
				blockType: 'cta';
		  }
		| {
				invertBackground?: boolean | null;
				columns?:
					| {
							size?: ('oneThird' | 'half' | 'twoThirds' | 'full') | null;
							richText: {
								[k: string]: unknown;
							}[];
							enableLink?: boolean | null;
							link?: {
								type?: ('reference' | 'custom') | null;
								newTab?: boolean | null;
								reference?: {
									relationTo: 'articles';
									value: number | Article;
								} | null;
								url?: string | null;
								label: string;
								appearance?: ('default' | 'primary' | 'secondary') | null;
							};
							id?: string | null;
					  }[]
					| null;
				id?: string | null;
				blockName?: string | null;
				blockType: 'content';
		  }
		| {
				invertBackground?: boolean | null;
				position?: ('default' | 'fullscreen') | null;
				media: number | Media;
				id?: string | null;
				blockName?: string | null;
				blockType: 'mediaBlock';
		  }
		| {
				introContent: {
					[k: string]: unknown;
				}[];
				populateBy?: ('collection' | 'selection') | null;
				relationTo?: 'products' | null;
				categories?: (number | Category)[] | null;
				limit?: number | null;
				selectedDocs?:
					| {
							relationTo: 'products';
							value: number | Product;
					  }[]
					| null;
				populatedDocs?:
					| {
							relationTo: 'products';
							value: number | Product;
					  }[]
					| null;
				populatedDocsTotal?: number | null;
				id?: string | null;
				blockName?: string | null;
				blockType: 'archive';
		  }
	)[];
	slug?: string | null;
	meta?: {
		title?: string | null;
		description?: string | null;
		image?: number | Media | null;
	};
	updatedAt: string;
	createdAt: string;
	_status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
	id: number;
	alt: string;
	caption?:
		| {
				[k: string]: unknown;
		  }[]
		| null;
	updatedAt: string;
	createdAt: string;
	url?: string | null;
	filename?: string | null;
	mimeType?: string | null;
	filesize?: number | null;
	width?: number | null;
	height?: number | null;
	focalX?: number | null;
	focalY?: number | null;
	sizes?: {
		thumbnail?: {
			url?: string | null;
			width?: number | null;
			height?: number | null;
			mimeType?: string | null;
			filesize?: number | null;
			filename?: string | null;
		};
		thumbnailWebp?: {
			url?: string | null;
			width?: number | null;
			height?: number | null;
			mimeType?: string | null;
			filesize?: number | null;
			filename?: string | null;
		};
		small?: {
			url?: string | null;
			width?: number | null;
			height?: number | null;
			mimeType?: string | null;
			filesize?: number | null;
			filename?: string | null;
		};
		smallWebp?: {
			url?: string | null;
			width?: number | null;
			height?: number | null;
			mimeType?: string | null;
			filesize?: number | null;
			filename?: string | null;
		};
		medium?: {
			url?: string | null;
			width?: number | null;
			height?: number | null;
			mimeType?: string | null;
			filesize?: number | null;
			filename?: string | null;
		};
		mediumWebp?: {
			url?: string | null;
			width?: number | null;
			height?: number | null;
			mimeType?: string | null;
			filesize?: number | null;
			filename?: string | null;
		};
		large?: {
			url?: string | null;
			width?: number | null;
			height?: number | null;
			mimeType?: string | null;
			filesize?: number | null;
			filename?: string | null;
		};
		largeWebp?: {
			url?: string | null;
			width?: number | null;
			height?: number | null;
			mimeType?: string | null;
			filesize?: number | null;
			filename?: string | null;
		};
	};
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories".
 */
export interface Category {
	id: number;
	title?: string | null;
	parent?: (number | null) | Category;
	breadcrumbs?:
		| {
				doc?: (number | null) | Category;
				url?: string | null;
				label?: string | null;
				id?: string | null;
		  }[]
		| null;
	updatedAt: string;
	createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "products".
 */
export interface Product {
	id: number;
	title: string;
	publishedOn?: string | null;
	description?:
		| {
				[k: string]: unknown;
		  }[]
		| null;
	vendor?: string | null;
	variations?: (number | Variation)[] | null;
	categories?: (number | Category)[] | null;
	tags?: (number | Tag)[] | null;
	type?: (number | null) | ProductType;
	relatedProducts?: (number | Product)[] | null;
	slug?: string | null;
	meta?: {
		title?: string | null;
		description?: string | null;
		image?: number | Media | null;
	};
	updatedAt: string;
	createdAt: string;
	_status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "variations".
 */
export interface Variation {
	id: number;
	name: string;
	sku?: string | null;
	image?: number | Media | null;
	attributes?: (number | Attribute)[] | null;
	attributeValues?:
		| {
				[k: string]: unknown;
		  }
		| unknown[]
		| string
		| number
		| boolean
		| null;
	price?: number | null;
	inventory?: number | null;
	dimensions?: {
		height?: number | null;
		length?: number | null;
		width?: number | null;
	};
	isDefault?: boolean | null;
	skipSync?: boolean | null;
	stripeProductID?: string | null;
	updatedAt: string;
	createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "attributes".
 */
export interface Attribute {
	id: number;
	label: string;
	name: string;
	type?: ('text' | 'options' | 'colors') | null;
	isVirtual?: boolean | null;
	text?: string | null;
	options?:
		| {
				label?: string | null;
				value: string;
				id?: string | null;
		  }[]
		| null;
	colors?:
		| {
				label: string;
				value: string;
				id?: string | null;
		  }[]
		| null;
	updatedAt: string;
	createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "tags".
 */
export interface Tag {
	id: number;
	title?: string | null;
	updatedAt: string;
	createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "product-types".
 */
export interface ProductType {
	id: number;
	title?: string | null;
	updatedAt: string;
	createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "orders".
 */
export interface Order {
	id: number;
	orderedBy?: (number | null) | User;
	stripePaymentIntentID?: string | null;
	total: number;
	items?:
		| {
				product: number | Product;
				price?: number | null;
				quantity?: number | null;
				id?: string | null;
		  }[]
		| null;
	updatedAt: string;
	createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
	id: number;
	name?: string | null;
	roles?: ('admin' | 'customer')[] | null;
	purchases?: (number | Product)[] | null;
	stripeCustomerID?: string | null;
	cart?: {
		items?: CartItems;
	};
	skipSync?: boolean | null;
	updatedAt: string;
	createdAt: string;
	enableAPIKey?: boolean | null;
	apiKey?: string | null;
	apiKeyIndex?: string | null;
	email: string;
	resetPasswordToken?: string | null;
	resetPasswordExpiration?: string | null;
	salt?: string | null;
	hash?: string | null;
	loginAttempts?: number | null;
	lockUntil?: string | null;
	password: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "redirects".
 */
export interface Redirect {
	id: number;
	from: string;
	to?: {
		type?: ('reference' | 'custom') | null;
		reference?:
			| ({
					relationTo: 'articles';
					value: number | Article;
			  } | null)
			| ({
					relationTo: 'products';
					value: number | Product;
			  } | null);
		url?: string | null;
	};
	updatedAt: string;
	createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
	id: number;
	user: {
		relationTo: 'users';
		value: number | User;
	};
	key?: string | null;
	value?:
		| {
				[k: string]: unknown;
		  }
		| unknown[]
		| string
		| number
		| boolean
		| null;
	updatedAt: string;
	createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
	id: number;
	name?: string | null;
	batch?: number | null;
	updatedAt: string;
	createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "settings".
 */
export interface Settings {
	id: number;
	productsPage?: (number | null) | Article;
	updatedAt?: string | null;
	createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "header".
 */
export interface Header {
	id: number;
	navItems?:
		| {
				link: {
					type?: ('reference' | 'custom') | null;
					newTab?: boolean | null;
					reference?: {
						relationTo: 'articles';
						value: number | Article;
					} | null;
					url?: string | null;
					label: string;
				};
				id?: string | null;
		  }[]
		| null;
	updatedAt?: string | null;
	createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer".
 */
export interface Footer {
	id: number;
	navItems?:
		| {
				link: {
					type?: ('reference' | 'custom') | null;
					newTab?: boolean | null;
					reference?: {
						relationTo: 'articles';
						value: number | Article;
					} | null;
					url?: string | null;
					label: string;
				};
				id?: string | null;
		  }[]
		| null;
	updatedAt?: string | null;
	createdAt?: string | null;
}
