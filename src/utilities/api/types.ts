/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CartItems".
 */
export type CartItems =
	| {
			product?: (number | null) | Product;
			variation?: (number | null) | Variation;
			quantity?: number | null;
			id?: string | null;
	  }[]
	| null;

export interface Config {
	auth: {
		users: UserAuthOperations;
	};
	collections: {
		users: User;
		media: Media;
		articles: Article;
		attributes: Attribute;
		entities: Entity;
		products: Product;
		variations: Variation;
		categories: Category;
		'product-types': ProductType;
		tags: Tag;
		orders: Order;
		brands: Brand;
		'payload-locked-documents': PayloadLockedDocument;
		'payload-preferences': PayloadPreference;
		'payload-migrations': PayloadMigration;
	};
	collectionsJoins: {
		products: {
			variations: 'variations';
		};
		categories: {
			products: 'products';
		};
		'product-types': {
			products: 'products';
		};
		tags: {
			products: 'products';
		};
		brands: {
			products: 'products';
		};
	};
	collectionsSelect: {
		users: UsersSelect<false> | UsersSelect<true>;
		media: MediaSelect<false> | MediaSelect<true>;
		articles: ArticlesSelect<false> | ArticlesSelect<true>;
		attributes: AttributesSelect<false> | AttributesSelect<true>;
		entities: EntitiesSelect<false> | EntitiesSelect<true>;
		products: ProductsSelect<false> | ProductsSelect<true>;
		variations: VariationsSelect<false> | VariationsSelect<true>;
		categories: CategoriesSelect<false> | CategoriesSelect<true>;
		'product-types': ProductTypesSelect<false> | ProductTypesSelect<true>;
		tags: TagsSelect<false> | TagsSelect<true>;
		orders: OrdersSelect<false> | OrdersSelect<true>;
		brands: BrandsSelect<false> | BrandsSelect<true>;
		'payload-locked-documents':
			| PayloadLockedDocumentsSelect<false>
			| PayloadLockedDocumentsSelect<true>;
		'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
		'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
	};
	db: {
		defaultIDType: number;
	};
	globals: {
		filters: Filter;
	};
	globalsSelect: {
		filters: FiltersSelect<false> | FiltersSelect<true>;
	};
	locale: null;
	user: User & {
		collection: 'users';
	};
	jobs: {
		tasks: unknown;
		workflows: unknown;
	};
}
export interface UserAuthOperations {
	forgotPassword: {
		email: string;
		password: string;
	};
	login: {
		email: string;
		password: string;
	};
	registerFirstUser: {
		email: string;
		password: string;
	};
	unlock: {
		email: string;
		password: string;
	};
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
	id: number;
	name?: string | null;
	roles?: ('admin' | 'customer')[] | null;
	purchases?: (number | Variation)[] | null;
	stripeCustomerID?: string | null;
	cart?: {
		stripePaymentIntentID?: string | null;
		items?: CartItems;
	};
	skipSync?: boolean | null;
	updatedAt: string;
	createdAt: string;
	enableAPIKey?: boolean | null;
	apiKey?: string | null;
	apiKeyIndex?: string | null;
	email: string;
	resetPasswordToken?: string | null;
	resetPasswordExpiration?: string | null;
	salt?: string | null;
	hash?: string | null;
	loginAttempts?: number | null;
	lockUntil?: string | null;
	password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "variations".
 */
export interface Variation {
	id: number;
	name: string;
	sku?: string | null;
	product?: (number | null) | Product;
	images?: (number | Media)[] | null;
	attributes?: (number | Attribute)[] | null;
	attributeValues?:
		| {
				[k: string]: unknown;
		  }
		| unknown[]
		| string
		| number
		| boolean
		| null;
	price?: number | null;
	inventory?: number | null;
	dimensions?: {
		height?: number | null;
		length?: number | null;
		width?: number | null;
	};
	isDefault?: boolean | null;
	skipSync?: boolean | null;
	stripeProductID?: string | null;
	updatedAt: string;
	createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "products".
 */
export interface Product {
	id: number;
	title: string;
	slug: string;
	publishedOn?: string | null;
	description?: {
		root: {
			type: string;
			children: {
				type: string;
				version: number;
				[k: string]: unknown;
			}[];
			direction: ('ltr' | 'rtl') | null;
			format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
			indent: number;
			version: number;
		};
		[k: string]: unknown;
	} | null;
	images?: (number | Media)[] | null;
	vendor?: string | null;
	variations?: {
		docs?: (number | Variation)[] | null;
		hasNextPage?: boolean | null;
	} | null;
	categories?: (number | Category)[] | null;
	tags?: (number | Tag)[] | null;
	type?: (number | null) | ProductType;
	brand?: (number | null) | Brand;
	entities?: (number | Entity)[] | null;
	relatedProducts?: (number | Product)[] | null;
	updatedAt: string;
	createdAt: string;
	_status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
	id: number;
	alt?: string | null;
	updatedAt: string;
	createdAt: string;
	url?: string | null;
	thumbnailURL?: string | null;
	filename?: string | null;
	mimeType?: string | null;
	filesize?: number | null;
	width?: number | null;
	height?: number | null;
	focalX?: number | null;
	focalY?: number | null;
	sizes?: {
		thumbnail?: {
			url?: string | null;
			width?: number | null;
			height?: number | null;
			mimeType?: string | null;
			filesize?: number | null;
			filename?: string | null;
		};
		thumbnailWebp?: {
			url?: string | null;
			width?: number | null;
			height?: number | null;
			mimeType?: string | null;
			filesize?: number | null;
			filename?: string | null;
		};
		small?: {
			url?: string | null;
			width?: number | null;
			height?: number | null;
			mimeType?: string | null;
			filesize?: number | null;
			filename?: string | null;
		};
		smallWebp?: {
			url?: string | null;
			width?: number | null;
			height?: number | null;
			mimeType?: string | null;
			filesize?: number | null;
			filename?: string | null;
		};
		medium?: {
			url?: string | null;
			width?: number | null;
			height?: number | null;
			mimeType?: string | null;
			filesize?: number | null;
			filename?: string | null;
		};
		mediumWebp?: {
			url?: string | null;
			width?: number | null;
			height?: number | null;
			mimeType?: string | null;
			filesize?: number | null;
			filename?: string | null;
		};
		large?: {
			url?: string | null;
			width?: number | null;
			height?: number | null;
			mimeType?: string | null;
			filesize?: number | null;
			filename?: string | null;
		};
		largeWebp?: {
			url?: string | null;
			width?: number | null;
			height?: number | null;
			mimeType?: string | null;
			filesize?: number | null;
			filename?: string | null;
		};
	};
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories".
 */
export interface Category {
	id: number;
	title?: string | null;
	products?: {
		docs?: (number | Product)[] | null;
		hasNextPage?: boolean | null;
	} | null;
	updatedAt: string;
	createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "tags".
 */
export interface Tag {
	id: number;
	title?: string | null;
	products?: {
		docs?: (number | Product)[] | null;
		hasNextPage?: boolean | null;
	} | null;
	updatedAt: string;
	createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "product-types".
 */
export interface ProductType {
	id: number;
	title?: string | null;
	products?: {
		docs?: (number | Product)[] | null;
		hasNextPage?: boolean | null;
	} | null;
	updatedAt: string;
	createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "brands".
 */
export interface Brand {
	id: number;
	title: string;
	logo?: (number | null) | Media;
	description?: {
		root: {
			type: string;
			children: {
				type: string;
				version: number;
				[k: string]: unknown;
			}[];
			direction: ('ltr' | 'rtl') | null;
			format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
			indent: number;
			version: number;
		};
		[k: string]: unknown;
	} | null;
	products?: {
		docs?: (number | Product)[] | null;
		hasNextPage?: boolean | null;
	} | null;
	updatedAt: string;
	createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "entities".
 */
export interface Entity {
	id: number;
	title: string;
	slug: string;
	logo: number | Media;
	description?: {
		root: {
			type: string;
			children: {
				type: string;
				version: number;
				[k: string]: unknown;
			}[];
			direction: ('ltr' | 'rtl') | null;
			format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
			indent: number;
			version: number;
		};
		[k: string]: unknown;
	} | null;
	updatedAt: string;
	createdAt: string;
	_status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "attributes".
 */
export interface Attribute {
	id: number;
	label: string;
	name: string;
	type?: ('text' | 'options' | 'colors') | null;
	isVirtual?: boolean | null;
	text?: string | null;
	options?:
		| {
				label?: string | null;
				value: string;
				id?: string | null;
		  }[]
		| null;
	colors?:
		| {
				label: string;
				value: string;
				id?: string | null;
		  }[]
		| null;
	updatedAt: string;
	createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "articles".
 */
export interface Article {
	id: number;
	title: string;
	slug: string;
	slideshow?: (number | Media)[] | null;
	content?: {
		root: {
			type: string;
			children: {
				type: string;
				version: number;
				[k: string]: unknown;
			}[];
			direction: ('ltr' | 'rtl') | null;
			format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
			indent: number;
			version: number;
		};
		[k: string]: unknown;
	} | null;
	publishedOn?: string | null;
	updatedAt: string;
	createdAt: string;
	_status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "orders".
 */
export interface Order {
	id: number;
	orderedBy?: (number | null) | User;
	stripePaymentIntentID?: string | null;
	total: number;
	items?:
		| {
				product: number | Product;
				variation: number | Variation;
				price?: number | null;
				quantity?: number | null;
				id?: string | null;
		  }[]
		| null;
	updatedAt: string;
	createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
	id: number;
	document?:
		| ({
				relationTo: 'users';
				value: number | User;
		  } | null)
		| ({
				relationTo: 'media';
				value: number | Media;
		  } | null)
		| ({
				relationTo: 'articles';
				value: number | Article;
		  } | null)
		| ({
				relationTo: 'attributes';
				value: number | Attribute;
		  } | null)
		| ({
				relationTo: 'entities';
				value: number | Entity;
		  } | null)
		| ({
				relationTo: 'products';
				value: number | Product;
		  } | null)
		| ({
				relationTo: 'variations';
				value: number | Variation;
		  } | null)
		| ({
				relationTo: 'categories';
				value: number | Category;
		  } | null)
		| ({
				relationTo: 'product-types';
				value: number | ProductType;
		  } | null)
		| ({
				relationTo: 'tags';
				value: number | Tag;
		  } | null)
		| ({
				relationTo: 'orders';
				value: number | Order;
		  } | null)
		| ({
				relationTo: 'brands';
				value: number | Brand;
		  } | null);
	globalSlug?: string | null;
	user: {
		relationTo: 'users';
		value: number | User;
	};
	updatedAt: string;
	createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
	id: number;
	user: {
		relationTo: 'users';
		value: number | User;
	};
	key?: string | null;
	value?:
		| {
				[k: string]: unknown;
		  }
		| unknown[]
		| string
		| number
		| boolean
		| null;
	updatedAt: string;
	createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
	id: number;
	name?: string | null;
	batch?: number | null;
	updatedAt: string;
	createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
	name?: T;
	roles?: T;
	purchases?: T;
	stripeCustomerID?: T;
	cart?:
		| T
		| {
				stripePaymentIntentID?: T;
				items?:
					| T
					| {
							product?: T;
							variation?: T;
							quantity?: T;
							id?: T;
					  };
		  };
	skipSync?: T;
	updatedAt?: T;
	createdAt?: T;
	enableAPIKey?: T;
	apiKey?: T;
	apiKeyIndex?: T;
	email?: T;
	resetPasswordToken?: T;
	resetPasswordExpiration?: T;
	salt?: T;
	hash?: T;
	loginAttempts?: T;
	lockUntil?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
	alt?: T;
	updatedAt?: T;
	createdAt?: T;
	url?: T;
	thumbnailURL?: T;
	filename?: T;
	mimeType?: T;
	filesize?: T;
	width?: T;
	height?: T;
	focalX?: T;
	focalY?: T;
	sizes?:
		| T
		| {
				thumbnail?:
					| T
					| {
							url?: T;
							width?: T;
							height?: T;
							mimeType?: T;
							filesize?: T;
							filename?: T;
					  };
				thumbnailWebp?:
					| T
					| {
							url?: T;
							width?: T;
							height?: T;
							mimeType?: T;
							filesize?: T;
							filename?: T;
					  };
				small?:
					| T
					| {
							url?: T;
							width?: T;
							height?: T;
							mimeType?: T;
							filesize?: T;
							filename?: T;
					  };
				smallWebp?:
					| T
					| {
							url?: T;
							width?: T;
							height?: T;
							mimeType?: T;
							filesize?: T;
							filename?: T;
					  };
				medium?:
					| T
					| {
							url?: T;
							width?: T;
							height?: T;
							mimeType?: T;
							filesize?: T;
							filename?: T;
					  };
				mediumWebp?:
					| T
					| {
							url?: T;
							width?: T;
							height?: T;
							mimeType?: T;
							filesize?: T;
							filename?: T;
					  };
				large?:
					| T
					| {
							url?: T;
							width?: T;
							height?: T;
							mimeType?: T;
							filesize?: T;
							filename?: T;
					  };
				largeWebp?:
					| T
					| {
							url?: T;
							width?: T;
							height?: T;
							mimeType?: T;
							filesize?: T;
							filename?: T;
					  };
		  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "articles_select".
 */
export interface ArticlesSelect<T extends boolean = true> {
	title?: T;
	slug?: T;
	slideshow?: T;
	content?: T;
	publishedOn?: T;
	updatedAt?: T;
	createdAt?: T;
	_status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "attributes_select".
 */
export interface AttributesSelect<T extends boolean = true> {
	label?: T;
	name?: T;
	type?: T;
	isVirtual?: T;
	text?: T;
	options?:
		| T
		| {
				label?: T;
				value?: T;
				id?: T;
		  };
	colors?:
		| T
		| {
				label?: T;
				value?: T;
				id?: T;
		  };
	updatedAt?: T;
	createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "entities_select".
 */
export interface EntitiesSelect<T extends boolean = true> {
	title?: T;
	slug?: T;
	logo?: T;
	description?: T;
	updatedAt?: T;
	createdAt?: T;
	_status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "products_select".
 */
export interface ProductsSelect<T extends boolean = true> {
	title?: T;
	slug?: T;
	publishedOn?: T;
	description?: T;
	images?: T;
	vendor?: T;
	variations?: T;
	categories?: T;
	tags?: T;
	type?: T;
	brand?: T;
	entities?: T;
	relatedProducts?: T;
	updatedAt?: T;
	createdAt?: T;
	_status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "variations_select".
 */
export interface VariationsSelect<T extends boolean = true> {
	name?: T;
	sku?: T;
	product?: T;
	images?: T;
	attributes?: T;
	attributeValues?: T;
	price?: T;
	inventory?: T;
	dimensions?:
		| T
		| {
				height?: T;
				length?: T;
				width?: T;
		  };
	isDefault?: T;
	skipSync?: T;
	stripeProductID?: T;
	updatedAt?: T;
	createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories_select".
 */
export interface CategoriesSelect<T extends boolean = true> {
	title?: T;
	products?: T;
	updatedAt?: T;
	createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "product-types_select".
 */
export interface ProductTypesSelect<T extends boolean = true> {
	title?: T;
	products?: T;
	updatedAt?: T;
	createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "tags_select".
 */
export interface TagsSelect<T extends boolean = true> {
	title?: T;
	products?: T;
	updatedAt?: T;
	createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "orders_select".
 */
export interface OrdersSelect<T extends boolean = true> {
	orderedBy?: T;
	stripePaymentIntentID?: T;
	total?: T;
	items?:
		| T
		| {
				product?: T;
				variation?: T;
				price?: T;
				quantity?: T;
				id?: T;
		  };
	updatedAt?: T;
	createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "brands_select".
 */
export interface BrandsSelect<T extends boolean = true> {
	title?: T;
	logo?: T;
	description?: T;
	products?: T;
	updatedAt?: T;
	createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
	document?: T;
	globalSlug?: T;
	user?: T;
	updatedAt?: T;
	createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
	user?: T;
	key?: T;
	value?: T;
	updatedAt?: T;
	createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
	name?: T;
	batch?: T;
	updatedAt?: T;
	createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "filters".
 */
export interface Filter {
	id: number;
	filters?:
		| {
				label?: string | null;
				tag?: (number | null) | Tag;
				productTypes?: (number | ProductType)[] | null;
				id?: string | null;
		  }[]
		| null;
	updatedAt?: string | null;
	createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "filters_select".
 */
export interface FiltersSelect<T extends boolean = true> {
	filters?:
		| T
		| {
				label?: T;
				tag?: T;
				productTypes?: T;
				id?: T;
		  };
	updatedAt?: T;
	createdAt?: T;
	globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
	[k: string]: unknown;
}
